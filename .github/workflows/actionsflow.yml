# name: Actionsflow
# on:
#   # schedule:
#   #   - cron: "0 * * * *"
#   push:
#     branches:
#       - main
#   repository_dispatch:
#   workflow_dispatch:
#     inputs:
#       include:
#         description: "--include: workflow file filter, you can use glob format to filter your workflows, the default value is empty value, means no filter will be using"
#         required: false
#         default: ""
#       force:
#         description: "--force: whether force to run workflow, true or false"
#         required: false
#         default: "false"
#       verbose:
#         description: "--verbose: debug workflow, true or false"
#         required: false
#         default: "false"
# jobs:
#   run:
#     runs-on: ubuntu-latest
#     name: Run
#     concurrency: actionsflow
#     steps:
#       - uses: actions/checkout@v3
#       - name: Run Actionsflow
#         uses: actionsflow/actionsflow-action@v1.3.0
#         with:
#           args: "build --include ${{ github.event.inputs.include || ''}} -f ${{github.event.inputs.force=='true' && 'true' || 'false'}} --verbose ${{github.event.inputs.verbose=='true' && 'true' || 'false'}}"
#           json-secrets: ${{ toJSON(secrets) }}
#           json-github: ${{ toJSON(github) }}
#       - name: Setup act
#         uses: actionsflow/setup-act-for-actionsflow@v1.2.0
#       - name: Run act
#         run: act --workflows ./dist/workflows --secret-file ./dist/.secrets --eventpath ./dist/event.json --env-file ./dist/.env -P ubuntu-latest=ghcr.io/catthehacker/ubuntu:act-latest

name: Actionsflow
on:
  schedule:
    - cron: "0 * * * *"
  push:
    branches:
      - main
  repository_dispatch:
  workflow_dispatch:
    inputs:
      include:
        description: "--include: workflow file filter, you can use glob format to filter your workflows, the default value is empty value, means no filter will be using"
        required: false
        default: ""
      force:
        description: "--force: whether force to run workflow, true or false"
        required: false
        default: "false"
      verbose:
        description: "--verbose: debug workflow, true or false"
        required: false
        default: "false"

jobs:
  run:
    runs-on: ubuntu-latest
    name: Run
    concurrency: actionsflow
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v3

      - name: Install Actionsflow
        run: npm install -g actionsflow

      - name: Run Actionsflow
        run: |
          actionsflow build \
            --include "${{ github.event.inputs.include || '' }}" \
            -f "${{ github.event.inputs.force == 'true' && 'true' || 'false' }}" \
            --verbose "${{ github.event.inputs.verbose == 'true' && 'true' || 'false' }}"

      - name: Setup act
        uses: actionsflow/setup-act-for-actionsflow@v1.2.0

      - name: Run act
        run: act --workflows ./dist/workflows --secret-file ./dist/.secrets --eventpath ./dist/event.json --env-file ./dist/.env -P ubuntu-latest=ghcr.io/catthehacker/ubuntu:act-latest

      - name: Commit and Push README changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Check if there are any changes to commit
          if ! git diff --quiet HEAD -- README.md; then
            # Pull the latest changes from remote
            git pull origin main --rebase
            
            # Add and commit changes
            git add README.md
            git commit -m "Update README with daily fact"
            
            # Push with retry logic
            for i in {1..3}; do
              if git push origin main; then
                echo "Successfully pushed changes"
                break
              else
                echo "Push failed, attempt $i of 3"
                if [ $i -lt 3 ]; then
                  echo "Pulling latest changes and retrying..."
                  git pull origin main --rebase
                else
                  echo "Failed to push after 3 attempts"
                  exit 1
                fi
              fi
            done
          else
            echo "No changes to commit"
          fi
